# References:
# https://some-natalie.dev/blog/kaniko-in-arc/
# https://dev.to/ipo/using-kaniko-to-build-and-publish-container-image-with-github-action-on-github-self-hosted-runners-d5m

name: Image build
on:
  workflow_dispatch:
  schedule:
  - cron: "0 23 1 * *"
  push:
    paths-ignore:
    - .github/**
    - README.md
    branches:
    - master
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  REPO: mzihlmann/kaniko
  GO_VERSION: 1.25
  SSL_CERT_DIR: /kaniko/ssl/certs

jobs:
  build:
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: docker.io/martizih/kaniko:debug
    permissions:
      contents: read
    steps:
    - name: Set tag
      run: |
        echo VERSION=$(wget -O - https://api.github.com/repos/$REPO/releases/latest | grep tag_name | cut -d '"' -f 4) | tee -a "$GITHUB_ENV"
        echo TAG=$(date -u +'%Y%m%d.%H%M') | tee -a "$GITHUB_ENV"

    # Hack moves /kaniko to /kaniko-build to work around issues like https://github.com/GoogleContainerTools/kaniko/issues/1757.
    # --kaniko-dir may be an alternative but using this, $DOCKER_CONFIG isn't reliably picked up in old or new kaniko path for some reason.
    - name: Build and release container
      run: |
        /kaniko/executor \
          --dockerfile="./Containerfile" \
          --context="${{ github.repositoryUrl }}#${{ github.ref }}#${{ github.sha }}" \
          --destination="$INTERNAL_REGISTRY/${{ github.repository }}:$VERSION.$TAG" \
          --destination="$INTERNAL_REGISTRY/${{ github.repository }}:latest" \
          --skip-tls-verify-registry=$INTERNAL_REGISTRY \
          --build-arg GO_VERSION=$GO_VERSION \
          --build-arg REPO=$REPO \
          --build-arg VERSION=$VERSION \
          --use-new-run \
          --skip-unused-stages \
          --snapshot-mode=redo \
          --cleanup \
          --image-download-retry=4 \
          --image-fs-extract-retry=4 \
          --push-retry=4
  cleanup:
    needs:
      - build
    env:
      TAGS_KEEP: 4
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: docker.io/regclient/regctl:alpine
    steps:
    - name: Remove old tags
      run: |
        set -e
        regctl registry set $INTERNAL_REGISTRY --cacert "$INTERNAL_CA_CERT"
        i=0
        for tag in $(regctl tag ls $INTERNAL_REGISTRY/${{ github.repository }} --exclude latest | sort -r); do
          if [ "$i" -ge "$TAGS_KEEP" ]; then
            echo "Delete $tag"
            regctl tag delete --ignore-missing $INTERNAL_REGISTRY/${{ github.repository }}:$tag
          fi
          i=$((i + 1))
        done